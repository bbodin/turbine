{"name":"Turbine","tagline":"Dataflow Graph Generator","body":"Turbine is a Dataflow graph generator. \r\nIt can generate SDFs, CSDFs and PCGs with initilization phases. All the graphs can be saved in the SDF3 XML format (a particular notation is considered for threshold and initilization phases).\r\n\r\nFeatures\r\n=======\r\n\r\nTBA\r\n\r\nInstallation\r\n=======\r\n\r\nRequirements\r\n-------\r\n\r\n * networkx-1.8.1\r\n * python-glpk-0.4.43\r\n\r\n On Fedora 17+, you can install networkx by using `yum install networkx -y`.\r\npython-glpk can be found here http://www.dcc.fc.up.pt/~jpp/code/python-glpk/.\r\n\r\nUsage\r\n=======\r\n\r\nHow to generate a dataflow using Python\r\n-------\r\n\r\n```\r\nimport turbine\r\ngraph = generate(taskCount)\r\nwrite_sdf3_file(graph)\r\n\r\n```\r\n\r\nThen a SDF3 XML file `sortie.sdf3` will be created in current directory.\r\nTo change the filename, you can use  `write_sdf3_file(graph, fileName = \"fileName\")`.\r\n\r\nHow to see the generated linear program used to compute the inital marking\r\n--------\r\n\r\n```\r\ngenerate(taskCount, writePL = True)\r\n```\r\n\r\nA `preload.pl` file will be created in current directory.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}